---
apiVersion: v1
kind: Service
metadata:
  name: __MM_INSTANCE_KEY__-svc
spec:
  type: NodePort
  ports:
    - port: 80
      targetPort: 8065
  selector:
    app: __MM_INSTANCE_KEY__

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: __MM_INSTANCE_KEY__
spec:
  replicas: __MM_INSTANCE_REPLICAS__ 
  selector:
    matchLabels:
      app: __MM_INSTANCE_KEY__
  template:
    metadata:
      labels:
        app: __MM_INSTANCE_KEY__
        mattermost_deploy_version: "__MM_DEPLOY_VERSION__"
        deploy_env: "__MM_DEPLOY_ENV__"
    spec:
      containers:
        - name: __MM_INSTANCE_KEY__
          image: __MM_DOCKER_REPO__:__MM_DOCKER_REPO_TAG__
          resources:
            limits:
              memory: 2000Mi
              cpu: "0.5"
            requests:
              memory: 2000Mi
              cpu: "0.5" 
          command :
            - bash
            - "-c"
            - |
              set x
              
              wget https://mm-staging-deploy.s3-ap-northeast-1.amazonaws.com/default/plugins-dev.tar.gz

              mkdir plugins
              cd $_
              
              tar xvzf plugins-dev.tar.gz 

              cd ..

              CONFIG="mysql://__MM_DB_USER__:__MM_DB_PASS__@tcp(__MM_DB_HOST__:__MM_DB_PORT__)/__MM_DB_NAME__?charset=utf8mb4,utf8\u0026readTimeout=30s\u0026writeTimeout=30s"

              ./bin/mattermost plugin add ./plugins/*.tar.gz  --config=$CONFIG

              ./bin/mattermost --config=$CONFIG
          ports:
            - name: liveness-port
              containerPort: 8065
          volumeMounts:
            - name: import-data
              mountPath: /import-data 
            - name: mattermost-conf
              mountPath: /app/config 
          #readinessProbe:
          #  exec:
          #    # Check we can execute queries over TCP (skip-networking is off).
          #    command: ["mysql", "-h", "127.0.0.1", "-e", "SELECT 1"]
          #  initialDelaySeconds: 5
          #  periodSeconds: 2
          #  timeoutSeconds: 1
          livenessProbe:
            httpGet:
              path: /
              port: liveness-port
            initialDelaySeconds: 60
            periodSeconds: 10
            timeoutSeconds: 5
          readinessProbe:
            httpGet:
              path: /
              port: liveness-port
            initialDelaySeconds: 60
            periodSeconds: 5
            successThreshold: 1
            failureThreshold: 30
      volumes:
        - name: aws-config
          configMap:
            name: mm-instance-conf
            items:
              - key: aws-credentials
                path: credentials # dig directory
              - key: aws-config
                path: config # dig directory
        - name: import-data
          emptyDir: {}
        - name: mattermost-conf
          emptyDir: {}

